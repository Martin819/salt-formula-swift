{% from "swift/map.jinja" import proxy with context %}

[DEFAULT]
bind_port = {{ proxy.bind.port }}
bind_ip = <%= @proxy_local_net_ip %>
user = swift
workers = {{ proxy.workers }}

#log_name = swift
#log_facility = <%= @log_facility %>
#log_level = <%= @log_level %>
#log_headers = <%= @log_headers %>
#log_address = <%= @log_address %>
#<% if @log_udp_host != '' -%>
# If set, log_udp_host will override log_address
#log_udp_host = <%= @log_udp_host -%>
#<% end %>
#<% if @log_udp_host !='' and @log_udp_port != '' -%>
#log_udp_port = <%= @log_udp_port -%>

[pipeline:main]
pipeline = healthcheck cache {% if proxy.identity is defined %}authtoken keystoneauth {% endif %}proxy-server
#pipeline = <%= @pipeline.to_a.join(' ') %>

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
account_autocreate = true
#set log_name = proxy-server
#set log_facility = <%= @log_facility %>
#set log_level = <%= @log_level %>
#set log_address = <%= @log_address %>
#log_handoffs = <%= @log_handoffs %>

{%- if proxy.identity is defined %}
[filter:keystoneauth]
use = egg:swift#keystoneauth
operator_roles = Member,admin,swiftoperator

[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
# Delaying the auth decision is required to support token-less
# usage for anonymous referrers ('.r:*').
delay_auth_decision = true
# cache directory for signing certificate
signing_dir = /home/swift/keystone-signing
# auth_* settings refer to the Keystone server
auth_protocol = http
auth_host = {{ proxy.identity.host }}
auth_port = {{ proxy.identity.port }}
# the service tenant and swift username and password created in Keystone
admin_tenant_name = {{ proxy.identity.tenant }}
admin_user = {{ proxy.identity.host }}
admin_password = {{ proxy.identity.password }}
{%- endif %}

[filter:cache]
use = egg:swift#memcache

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:healthcheck]
use = egg:swift#healthcheck
